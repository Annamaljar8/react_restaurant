{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/promotions.js","redux/comments.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","Card","in","transformProps","exitTransform","CardImg","src","image","alt","name","CardBody","CardTitle","designation","CardSubtitle","CardText","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","RenderMenuItem","onClick","to","id","width","CardImgOverlay","Menu","menu","dishes","map","key","Breadcrumb","BreadcrumbItem","active","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","this","postFeedback","resetFeedbackForm","href","role","model","onSubmit","Row","Label","htmlFor","md","Col","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","Button","type","color","Component","RenderDish","RenderComments","comments","postComment","dishId","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","CommentForm","state","isModalOpen","toggleModal","setState","raiting","Fragment","outline","Modal","isOpen","toggle","ModalHeader","ModalBody","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","height","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","input","Footer","leaderImg","minHeight","maxHeight","minWidth","maxWidth","RenderLeader","Media","tag","left","middle","style","object","body","heading","About","leaders","CardHeader","title","list","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","rating","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","message","json","addComment","catch","console","log","actions","reset","feedback","Dishes","action","Promotions","Comments","concat","Leaders","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e807f4f9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};\r\n","export const baseUrl = 'http://localhost:3001/';\r\n","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    if (isLoading) {\r\n        return(\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else\r\n        return(\r\n            <Card>\r\n                <FadeTransform in\r\n                    transformProps={{\r\n                        exitTransform: 'scale(o.5) translateY(-50%)'\r\n                    }}>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </FadeTransform>\r\n            </Card>\r\n        );\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"containe\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading}\r\n                    errMess={props.dishesErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                     <RenderCard item={props.leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\n    function RenderMenuItem({ dish, onClick }){\r\n        return(\r\n            <Card>\r\n                <Link to={`/menu/${dish.id}`}>\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n                </Link>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    const Menu = (props) => {\r\n\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n                return (\r\n                    <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                        <RenderMenuItem dish={dish} />\r\n                    </div>\r\n                );\r\n            });\r\n\r\n            if(props.dishes.isLoading) {\r\n                return(\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <Loading />\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            else if (props.dishes.errMess) {\r\n                return(\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <h4>{props.dishes.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            else\r\n                return (\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <Breadcrumb>\r\n                                <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                                <BreadcrumbItem active><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                            </Breadcrumb>\r\n                            <div className=\"col-12\">\r\n                                <h3>Menu</h3>\r\n                                <hr />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            {menu}\r\n                        </div>\r\n                    </div>\r\n                );\r\n    }\r\n\r\n\r\nexport default Menu;\r\n","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Row, Col, Label } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors} from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    handleSubmit(values){\r\n        this.props.postFeedback(values)\r\n      this.props.resetFeedbackForm()\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>Contact Us</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                    <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".firstname\"  id=\"firstname\" name=\"firstname\"\r\n                                    placeholder=\"First Name\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                     />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".firstname\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                    placeholder=\"Last Name\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                     />\r\n                                     <Errors\r\n                                         className=\"text-danger\"\r\n                                         model=\".lastname\"\r\n                                         show=\"touched\"\r\n                                         messages={{\r\n                                             required: 'Required',\r\n                                             minLength: 'Must be greater than 2 characters',\r\n                                             maxLength: 'Must be 15 characters or less'\r\n                                         }}\r\n                                     />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                    placeholder=\"Tel. Number\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                    }}\r\n                                     />\r\n                                     <Errors\r\n                                         className=\"text-danger\"\r\n                                         model=\".telnum\"\r\n                                         show=\"touched\"\r\n                                         messages={{\r\n                                             required: 'Required',\r\n                                             minLength: 'Must be greater than 2 numbers',\r\n                                             maxLength: 'Must be 15 numbers or less',\r\n                                             isNumber: 'Must be a number'\r\n                                         }}\r\n                                     />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                    placeholder=\"Email\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, validEmail\r\n                                    }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Adress'\r\n                                        }}\r\n                                    />\r\n                            </Col>\r\n                        </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\" className=\"form-check-input\" /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\" className=\"form-control\">\r\n                                    <option>Tel.</option>\r\n                                    <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback </Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" rows=\"12\" className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;\r\n","import React, {Component} from 'react';\r\nimport { Card, CardImg, CardText, CardBody,Modal, ModalHeader, ModalBody,\r\n    CardTitle, Breadcrumb, BreadcrumbItem, Button , Row, Col, Label} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\n    function RenderDish({dish}) {\r\n        return(\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <Card>\r\n                <FadeTransform in\r\n                    transformProps={{\r\n                        exitTransform: 'scale(o.5) translateY(-50%)'\r\n                    }}>\r\n                        <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                            <CardText>{dish.description}</CardText>\r\n                        </CardBody>\r\n                    </FadeTransform>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    function RenderComments({comments, postComment, dishId}){\r\n        if (comments != null){\r\n            return (\r\n                <div className=\"col-12 col-md-5 m1\">\r\n                    <h4>Comments</h4>\r\n                    <ul className=\"list-unstyled\">\r\n                        <Stagger in>\r\n                            {comments.map((comment) => {\r\n                                return (\r\n                                    <Fade in>\r\n                                        <li key={comment.id}>\r\n                                        <p>{comment.comment}</p>\r\n                                        <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))} </p>\r\n                                        </li>\r\n                                    </Fade>\r\n                                )\r\n                            })}\r\n                        </Stagger>\r\n                    </ul>\r\n                    <CommentForm dishId={dishId} postComment={postComment} />\r\n                </div>\r\n            );\r\n\r\n\r\n        }else {\r\n            return(\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    const DishDetail = (props) => {\r\n        if (props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if(props.dish != null){\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <RenderDish dish={props.dish} />\r\n                        <RenderComments comments= {props.comments} postComment={props.postComment}\r\n                        dishId={props.dish.id}\r\n                        />\r\n\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n     else {\r\n            return (<div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\nexport default DishDetail;\r\n\r\nclass CommentForm extends Component {\r\n   constructor(props) {\r\n       super(props);\r\n\r\n       this.state = {\r\n         isModalOpen:false\r\n       };\r\n\r\n       this.toggleModal = this.toggleModal.bind(this);\r\n       this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n     }\r\n     toggleModal() {\r\n             this.setState({\r\n               isModalOpen: !this.state.isModalOpen\r\n             });\r\n         }\r\n\r\n         handleSubmit(values) {\r\n             this.toggleModal();\r\n             this.props.postComment(this.props.dishId, values.raiting, values.author, values.comment);\r\n\r\n         }\r\n\r\n     render() {\r\n       return (\r\n           <React.Fragment>\r\n           <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span> Submit Comment</Button>\r\n           <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                   <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                   <ModalBody>\r\n                   <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                   <Row className=\"form-group\">\r\n                               <Label htmlFor=\"rating\" md={2}>Rating</Label>\r\n                               <Col md={10}>\r\n                                   <Control.select model=\".rating\" name=\"Rating\"\r\n                                       className=\"form-control\">\r\n                                       <option>1</option>\r\n                                       <option>2</option>\r\n                                       <option>3</option>\r\n                                       <option>4</option>\r\n                                       <option>5</option>\r\n                                   </Control.select>\r\n                               </Col>\r\n                           </Row>\r\n                   <Row className=\"form-group\">\r\n                               <Label htmlFor=\"author\" md={2}>Your Name</Label>\r\n                               <Col md={10}>\r\n                                   <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                       placeholder=\"Your Name\"\r\n                                       className=\"form-control\"\r\n                                       validators={{\r\n                                           required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                       }}\r\n                                           />\r\n                                   <Errors\r\n                                       className=\"text-danger\"\r\n                                       model=\".author\"\r\n                                       show=\"touched\"\r\n                                       messages={{\r\n                                           required: 'Required',\r\n                                           minLength: 'Must be greater than 2 characters',\r\n                                           maxLength: 'Must be 15 characters or less'\r\n                                       }}\r\n                                       />\r\n                               </Col>\r\n                           </Row>\r\n                           <Row className=\"form-group\">\r\n                               <Label htmlFor=\"Comment\" md={2}>Comment</Label>\r\n                               <Col md={10}>\r\n                                   <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                       rows=\"6\"\r\n                                       className=\"form-control\" />\r\n                               </Col>\r\n                           </Row>\r\n                           <Row className=\"form-group\">\r\n                               <Col md={{size:1, offset: 2}}>\r\n                                   <Button type=\"submit\" color=\"primary\">\r\n                                   Submit\r\n                                   </Button>\r\n                               </Col>\r\n                           </Row>\r\n                       </LocalForm>\r\n                   </ModalBody>\r\n               </Modal>\r\n               </React.Fragment>\r\n       );\r\n     }\r\n   }\r\n","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody, Form, FormGroup,Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen:false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n            <Navbar dark expand=\"md\">\r\n              <div className=\"container\">\r\n                  <NavbarToggler onClick={this.toggleNav} />\r\n                  <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                    <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\"\r\n                         alt=\"Restorante Con Fusion\" />\r\n                  </NavbarBrand>\r\n                  <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                    <Nav navbar>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-link\" to=\"/home\">\r\n                                <span className=\"fa fa-home fa-lg\"></span>  Home\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                <span className=\"fa fa-info fa-lg\"></span> About Us\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\r\n                            </NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                    <Nav className=\"ml-auto\" navbar>\r\n                        <NavItem>\r\n                            <Button outline onClick={this.toggleModal}>\r\n                                <span className=\"fa fa-sign-in fa-lg\"></span>\r\n                            </Button>\r\n                        </NavItem>\r\n                    </Nav>\r\n                </Collapse>\r\n              </div>\r\n            </Navbar>\r\n            <Jumbotron>\r\n                <div className=\"container\">\r\n                    <div className=\"row row-header\">\r\n                        <div className=\"col-12 col-sm-6\">\r\n                            <h1>Ristorante con Fusion</h1>\r\n                            <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Jumbotron>\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                <ModalBody>\r\n                    <Form onSubmit={this.handleLogin}>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"username\">Username</Label>\r\n                            <Input type=\"text\" id=\"username\" name=\"username\"\r\n                            innerRef={(input) => this.username = input} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"password\">Password</Label>\r\n                            <Input type=\"password\" id=\"password\" name=\"password\"\r\n                            innerRef={(input) => this.password = input} />\r\n                        </FormGroup>\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                                <Input type=\"checkbox\"  name=\"remember\" innerRef={(input) => this.remember = input} />\r\n                                Remember me\r\n                            </Label>\r\n                        </FormGroup>\r\n                        <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n        </React.Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n        <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li>\r\n                        <li><Link to=\"/contactus\">Contact</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                    </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nconst leaderImg = {\r\n    height: '105px',\r\n    width:'105px',\r\n    minHeight: '105px',\r\n    maxHeight: '105px',\r\n    minWidth: '105px',\r\n    maxWidth: '105px'\r\n}\r\n\r\n\r\n\r\nfunction RenderLeader({leader}) {\r\n    return(\r\n        <Stagger in>\r\n           <Fade in>\r\n                <div key={leader.id} className=\"col-12 mt-5\">\r\n                    <Media tag=\"li\">\r\n                      <Media left middle>\r\n                          <Media  style={leaderImg} object src={baseUrl + leader.image} alt={leader.name} />\r\n                      </Media>\r\n                      <Media body className=\"ml-5\">\r\n                        <Media heading>{leader.name}</Media>\r\n                        <h6>{leader.designation}</h6>\r\n                        <p>{leader.description}</p>\r\n                      </Media>\r\n                    </Media>\r\n                    </div>\r\n                </Fade>\r\n            </Stagger>\r\n\r\n    );\r\n}\r\n\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        return (\r\n            <RenderLeader leader={leader} />\r\n        );\r\n    });\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        {leaders}\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;\r\n","import * as ActionTypes from './ActionTypes';\r\nimport { DISHES } from '../shared/dishes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, raiting, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n            dishId: dishId,\r\n            rating: raiting,\r\n            author: author,\r\n            comment: comment\r\n        }\r\n        newComment.date = new Date().toISOString();\r\n\r\n        return fetch(baseUrl + 'comments', {\r\n            method: 'POST',\r\n            body: JSON.stringify(newComment),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            credentials: 'same-origin'\r\n        })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                }\r\n                else {\r\n                    var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n            .then(response => response.json())\r\n            .then(response => dispatch(addComment(response)))\r\n            .catch(error => {\r\n                console.log('Post comments ', error.message)\r\n                alert('Your comment could not be posted\\nError: '+error.message);\r\n            })\r\n}\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));;\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n\r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));;\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n\r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\nexport const postFeedback = (feedback) => (dispatch) => {\r\n    console.log('feedback', feedback)\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: 'POST',\r\n        body: JSON.stringify(feedback),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(function(response){\r\n        alert('Thank you for your feedback! '+ JSON.stringify(response));\r\n        return console.log(response)\r\n    })\r\n    .catch(error =>  { console.log('post feedbacks', error.message);\r\n     alert('Your feedback could not be posted\\nError: '+error.message); });\r\n};\r\n","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\n","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport About from './AboutComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos,fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        promotions: state.promotions,\r\n        leaders: state.leaders\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => { dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders()),\r\n  postFeedback:(feedback) =>dispatch(postFeedback(feedback))\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.props.fetchDishes();\r\n      this.props.fetchComments();\r\n      this.props.fetchPromos();\r\n      this.props.fetchLeaders();\r\n    }\r\n\r\n\r\nrender(){\r\n\r\n    const HomePage = () => {\r\n        return(\r\n            <Home\r\n                  dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n                  dishesLoading={this.props.dishes.isLoading}\r\n                  dishErrMess={this.props.dishes.errMess}\r\n                  promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n                  promoLoading={this.props.promotions.isLoading}\r\n                  promoErrMess={this.props.promotions.errMess}\r\n                  leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n                  leaderLoading={this.props.leaders.isLoading}\r\n                  leaderErrMess={this.props.leaders.errMess}\r\n              />\r\n        );\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n          <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n           isLoading={this.props.dishes.isLoading}\r\n           errMess={this.props.dishes.errMess}\r\n           comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n           commentsErrMess={this.props.comments.errMess}\r\n           postComment={this.props.postComment}\r\n         />\r\n      );\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <Header />\r\n        <TransitionGroup>\r\n            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                <Switch>\r\n                    <Route path=\"/home\" component={HomePage} />\r\n                    <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n                    <Route path='/menu/:dishId' component={DishWithId} />\r\n                    <Route path=\"/aboutus\" component={() => <About leaders={this.props.leaders} />} />\r\n                    <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm}\r\n                    postFeedback={this.props.postFeedback} />} />\r\n                    <Redirect to=\"/home\" />\r\n                </Switch>\r\n            </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    dishes: []\r\n}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload}; \r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []};\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, dishes: []};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        leaders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n        return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};\r\n","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n}\r\n","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\nrender(){\n  return (\n      <Provider store={store}>\n        <BrowserRouter>\n            <div>\n                <Main />\n                </div>\n        </BrowserRouter>\n    </Provider>\n  );\n}\n}\n\nexport default App;\n","import { createStore, combineReducers,applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Promotions } from './promotions';\r\nimport { Comments } from './comments';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n    return store;\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}